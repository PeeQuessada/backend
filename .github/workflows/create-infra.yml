name: Create aws resource using terraform
env:
  CI: ""
on:
  workflow_dispatch:
    inputs:
      region:
        description: ''
        required: true
        default: 'us-east-1'
      prefix:
          description: ''
          required: true
          default: 'backend'
      repository_name:
        description: ''
        required: true
        default: 'backend'
      cluster_name:
          description: ''
          required: true
          default: 'backend'

jobs:
  apply:
    name: 'terraform apply'
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.1    

      - name: Debug
        working-directory: infra/
        run: | 
          cat ~/.aws/credentials
          cat terraform.tfvars

      - name: Terraform init
        working-directory: infra/
        run: | 
          terraform init
      
      - name: Define terraform vars
        working-directory: infra/
        run: |
          echo "access_key = \"${{ secrets.AWS_ACCESS_KEY_ID }}\"" >> terraform.tfvars
          echo "secret_key = \"${{ secrets.AWS_SECRET_ACCESS_KEY }}\"" >> terraform.tfvars
          echo "session_token = \"${{ secrets.AWS_SESSION_TOKEN }}\"" >> terraform.tfvars
          echo "user_id = \"${{ secrets.AWS_USER_ID }}\"" >> terraform.tfvars
          echo "region = \"${{ github.event.inputs.region }}\"" >> terraform.tfvars
          echo "prefix = \"${{ github.event.inputs.prefix }}\"" >> terraform.tfvars
          echo "repository_name = \"${{ github.event.inputs.repository_name }}\"" >> terraform.tfvars
          echo "cluster_name = \"${{ github.event.inputs.cluster_name }}\"" >> terraform.tfvars

      # - name: Create infra using terraform
      #   working-directory: infra/
      #   run: | 
      #     terraform apply -auto-approve -var-file=terraform.tfvars
      
      - name: Build docker image
        run: |
          docker build -t ${{ secrets.AWS_USER_ID }}.dkr.ecr.${{ github.event.inputs.region }}-aws.amazonaws.com/${{ github.event.inputs.repository_name }}:latest .
      
      - name: Publish docker image on ERS
        run: |
          docker images
          docker push ${{ secrets.AWS_USER_ID }}.dkr.ecr.${{ github.event.inputs.region }}-aws.amazonaws.com/${{ github.event.inputs.repository_name }}:latest
      
      - name: Deploy application to EKS using terraform
        working-directory: infra/application
        run: |
          terraform init
          terraform apply -auto-approve -var-file=../terraform.tfvars